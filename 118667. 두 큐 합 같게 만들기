#try1 -> timeout
#sum을 사용해서 문제를 해결하려고 해서 시간이 오래걸림.

def solution(queue1, queue2):
    answer = 0
    total = (sum(queue1) + sum(queue2))//2
    
    while True:
        if answer > len(queue1) + len(queue2):
            return -1
        if sum(queue1) == total:
            break
        if sum(queue1) > sum(queue2):
            queue2.append(queue1.pop(0))
        else:
            queue1.append(queue2.pop(0))
        answer += 1
    
    return answer

#try2 -> 해결
#sum을 앞에서 한번만 하고, 값을 따로 더하고 뺸다.
from collections import deque

def solution(queue1, queue2):
    answer = 0
    queue1 = deque(queue1)
    queue2 = deque(queue2)
    q1 = sum(queue1)
    q2 = sum(queue2)
    target = (q1 + q2)//2
    cnt = (len(queue1) + len(queue2))+1
    
    while True:
        if target == q1:
            break
        if cnt < answer:
            return -1
            
        if q1 > q2:
            num = queue1.popleft()
            queue2.append(num)
            q1 -= num
            q2 += num
        else:
            num = queue2.popleft()
            queue1.append(num)
            q1 += num
            q2 -= num
        answer += 1
    
    
    return answer

